package CapaPresentacion;

import CapaDatos.DetalleVentaDAO;
import CapaDatos.EmpleadoDAO;
import CapaDatos.SucursalDAO;
import CapaDatos.VentaDAO;
import CapaLogica.Cliente;
import CapaLogica.DetalleVenta;
import CapaLogica.Distrito;
import CapaLogica.Empleado;
import CapaLogica.Moto;
import CapaLogica.Sucursal;
import CapaLogica.Venta;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LORD PAPU
 */
public class FrmVenta extends javax.swing.JFrame {

    /**
     * Creates new form FrmVenta
     */
    public FrmVenta() {
        initComponents();
        cargarSucursales();
        cargarEmpleados();
        VentaDAO ventaDAO = new VentaDAO();
        txtIdVenta.setText(ventaDAO.generarIdVenta());
        txtIdVenta.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDetalleVenta = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtIdVenta = new javax.swing.JTextField();
        txtCodCliente = new javax.swing.JTextField();
        cboSucursal = new javax.swing.JComboBox<>();
        cboFormaPago = new javax.swing.JComboBox<>();
        btnRegistrarVenta = new javax.swing.JButton();
        cboEmpleados = new javax.swing.JComboBox<>();
        btnDetalleVenta = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaDetalleVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID VENTA", "ID MOTO", "CANTIDAD", "PRECIO VENTA", "DESCUENTO"
            }
        ));
        jScrollPane1.setViewportView(tablaDetalleVenta);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VENTA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel1.setText("Cod Cliente:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Cod Venta:");

        jLabel3.setText("Sucursal:");

        jLabel4.setText("Nombre Empleado:");

        jLabel6.setText("Forma de Pago:");

        txtIdVenta.setEnabled(false);

        txtCodCliente.setEnabled(false);

        cboFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TARJETA", "EFECTIVO", "YAPE", "PLIN" }));

        btnRegistrarVenta.setText("REGISTRAR VENTA");
        btnRegistrarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdVenta))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboSucursal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(126, 126, 126)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboEmpleados, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(btnRegistrarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(cboSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        btnDetalleVenta.setText("Seleccionar Moto");
        btnDetalleVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalleVentaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("DETALLE DE VENTA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 932, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDetalleVenta)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetalleVenta))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetalleVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalleVentaActionPerformed
        // TODO add your handling code here:
        FrmDetalleVenta frmDetalleVenta = new FrmDetalleVenta(this); //PASO LA INSTANCIA DE FRMVENTA
        frmDetalleVenta.setVisible(true);
    }//GEN-LAST:event_btnDetalleVentaActionPerformed

    private void btnRegistrarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarVentaActionPerformed
        //ALMACENO LOS DATOS DEL FORMULARIO
        String idVenta = txtIdVenta.getText().trim();
        int idCliente = Integer.parseInt(txtCodCliente.getText().trim());
        Sucursal sucursalSeleccionada = (Sucursal) cboSucursal.getSelectedItem();
        Empleado empleadoSeleccionado = (Empleado) cboEmpleados.getSelectedItem();
        String formaPago = cboFormaPago.getSelectedItem().toString();

        //VALIDO QUE NO HAYA CAMPOS VACIOS
        if (idVenta.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe generar un ID de venta.");
            return;
        }

        if (sucursalSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una empleado.");
            return;
        }

        if (empleadoSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una sucursal.");
            return;
        }

        //VALIDAMOS QUE HAYA AL MENOS UNA MOTO AGREGADA
        DefaultTableModel modelo = (DefaultTableModel) tablaDetalleVenta.getModel();
        if (modelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Debe agregar al menos una moto a la venta.");
            return;
        }

        //MENSAJE DE CONFIRMACION ANTES DE REGISTRAR
        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de registrar esta venta?",
            "Confirmar registro",
            JOptionPane.YES_NO_OPTION
        );

        if (opcion != JOptionPane.YES_OPTION) {
            return; //SI EL USUARIO SELECCIONA NO, SE CANCELA EN PROCESO
        }

        //CREO EL OBJETO VENTA
        Venta venta = new Venta();
        venta.setIdVenta(idVenta);
        venta.setIdCliente(new Cliente(idCliente));
        venta.setFormaPago(formaPago);
        venta.setEmpleado(empleadoSeleccionado);
        venta.setSucursal(sucursalSeleccionada);
        
        

        //REGISTRO LA VENTA
        VentaDAO ventaDAO = new VentaDAO();
        boolean ventaRegistrada = ventaDAO.registrarVenta(venta);

        if (!ventaRegistrada) {
            JOptionPane.showMessageDialog(this, "Error al registrar la venta.");
            limpiarCampos();
            return;
        }

        //REGISTRO EL DETALLE DE VENTA
        DetalleVentaDAO detalleDAO = new DetalleVentaDAO();

        for (int i = 0; i < modelo.getRowCount(); i++) {
            int idMoto = Integer.parseInt(modelo.getValueAt(i, 1).toString());
            int cantidad = Integer.parseInt(modelo.getValueAt(i, 2).toString());
            double precioUnitario = Double.parseDouble(modelo.getValueAt(i, 3).toString());
            double descuento = Double.parseDouble(modelo.getValueAt(i, 4).toString());

            //CREAMOS EL OBJETO DETALLE VENTA
            DetalleVenta detalle = new DetalleVenta();
            detalle.setVenta(venta);
            detalle.setMoto(new Moto(idMoto));
            detalle.setCantidad(cantidad);
            detalle.setPrecioVentaUnidad(precioUnitario);
            detalle.setDescuento(descuento);

            boolean detalleRegistrado = detalleDAO.registrarDetalleVenta(detalle);

            if (!detalleRegistrado) {
                JOptionPane.showMessageDialog(this, "Error al registrar un detalle de la venta.");
                limpiarCampos();
                return;
            }
        }

        //MENSAJE DE CORRECTO REGISTRO DE VENTA
        JOptionPane.showMessageDialog(this, "La venta fue registrada correctamente.");
        this.dispose();

    }//GEN-LAST:event_btnRegistrarVentaActionPerformed
    

    //----------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------
    //METODO DE ACCESO PARA SETEAR EL IDCLIENTE SELECCIONADO
    //EN LA CAJA DE TEXTO
    public void setIdCliente(String idCliente){
        txtCodCliente.setText(idCliente);
    }
    
    
    //----------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------
    //METODO PARA AGREGAR LOS DATOS DEL FORMULARIO DETALLE VENTA:
    public void agregarDetalleVenta(String idMoto, int cantidad, double precioUnidad, double descuento) {
        DefaultTableModel modelo = (DefaultTableModel) tablaDetalleVenta.getModel();

        String idVenta = txtIdVenta.getText(); // puedes generarlo automáticamente o llenarlo antes
        modelo.addRow(new Object[]{ idVenta, idMoto, cantidad, precioUnidad, descuento });
    }
    
    
    //----------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------
    private void limpiarCampos(){
        // Limpiar la tabla de detalles de venta
        DefaultTableModel modelo = (DefaultTableModel) tablaDetalleVenta.getModel();
        modelo.setRowCount(0); // Elimina todas las filas
    }
    
    
    //----------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------
    //METODO QUE CARGARA LOS DISTRITOS EN MI COMBO BOX
    private void cargarSucursales() {
        try {
            cboSucursal.removeAllItems(); //LIMPIO EL COMBO
            cboSucursal.addItem(new Sucursal("","-Seleccione-",new Distrito(0))); //OPCION POR DEFECTO
            //LLAMO AL METODO QUE SE CONECTA A LA BD (DAO), TRAIGO TODOS LAS SUCURSALES
            //Y LOS ALMACENO EN UNA VARIABLE QUE ES UNA LISTA DE OBJETOS SUCURSAL
            List<Sucursal> sucursal = new SucursalDAO().listarSucursal();              
            for (Sucursal s : sucursal) {
                cboSucursal.addItem(s); //AGREGO CADA OBJETO AL COMBO
                                         //USANDO @OVERRIDE MUESTRO SOLO EL NOMBRE DE LA SUCURSAL               
            }           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar las Sucursales:" + e.getMessage());
        }      
    }    
    
    
    //----------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------
    //METODO QUE CARGARA LOS DISTRITOS EN MI COMBO BOX
    private void cargarEmpleados() {
        try {
            cboEmpleados.removeAllItems(); //LIMPIO EL COMBO
            cboEmpleados.addItem(new Empleado(0,"-Seleccione-")); //OPCION POR DEFECTO
            //LLAMO AL METODO QUE SE CONECTA A LA BD (DAO), TRAIGO TODOS LOS EMPLEADOS
            //Y LOS ALMACENO EN UNA VARIABLE QUE ES UNA LISTA DE OBJETOS EMPLEADOS
            List<Empleado> empleados = new EmpleadoDAO().listarEmpleados();              
            for (Empleado e : empleados) {
                cboEmpleados.addItem(e); //AGREGO CADA OBJETO AL COMBO
                                         //USANDO @OVERRIDE MUESTRO SOLO EL NOMBRE DE LA SUCURSAL           
            }           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar las Sucursales:" + e.getMessage());
        }      
    }    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalleVenta;
    private javax.swing.JButton btnRegistrarVenta;
    private javax.swing.JComboBox<Empleado> cboEmpleados;
    private javax.swing.JComboBox<String> cboFormaPago;
    private javax.swing.JComboBox<Sucursal> cboSucursal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDetalleVenta;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtIdVenta;
    // End of variables declaration//GEN-END:variables
}
